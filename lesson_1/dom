<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title></title>
</head>
<body>
<input type="button" value="Свойства и атрибуты" onclick="getHtml(idElement);">
<div class="test-div">
        <span attr="attrvalue">
            <p>Paragraph</p>
            <a href="#">Link 1</a>
            <a href="#">Link 2</a>
        </span>

    <p>Paragraph 2</p>
    <a> Link6</a>

    <h2>H2 tag</h2>
</div>

<div id="diw-with-id" style="color:blue">
    <a href="#">Link4</a>
    <table>
    </table>
    <a href="/"></a>
    <span></span>

    <div accesskey="some-key" class="some-test-class"></div>

    <a> Link5</a>

    <div></div>

</div>

<a href="#">Link3</a>

<article>
    Article tag
    <a href="#"></a>
</article>

<input type="text" placeholder="Введите тег для удаления...">


<input type="button" value="I button">

<input type="button" value="I Button">



<script type="text/javascript">
    var idElement = document.getElementById("diw-with-id");

    function getHtml(element) {
        for (var i = 0; i < element.childNodes.length; i++) {
            //console.log(i + ". Дочерний элемент:" , element.childNodes[i]);
            // console.log("Имя узла:" + element.childNodes[i].nodeName);
            // console.log("Имя тега:" + element.childNodes[i].tagName);
            // console.log("Тип узла: " + dictionaryTypes[element.childNodes[i].nodeType]);
            // console.log("Содержимое узла: " + element.childNodes[i].data);
            // console.log("Содержимое nodeValue: " + element.childNodes[i].nodeValue);
            //console.log("Содержимое innerHTML: " + element.childNodes[i].innerHTML);
            // console.log("Аттрибуты узла: " , element.childNodes[i].attributes);
            // if (element.childNodes[i].attributes) {
            //    console.log('Аттрибуты узла: ', element.childNodes[i].attributes, "\n");
            // } else {
            //    console.log('Узел не содержит аттрибутов.\n')
            // }

            var result = i + ". Дочерний элемент:" + element.childNodes[i] + '<br>' +"Имя узла:" + element.childNodes[i].nodeName;
            var newItem = document.createElement("LI");
            
            var childElement = document.createTextNode(result );
            
            newItem.appendChild( childElement );
            
        }
    }


    /**
     * 1. Написать функцию которая получает как параметр HTML элеемент и выводит на екран все свойства и все атрибуты себя и всех дочерних елементов.
     * Вывод на экран осуществляется вставкой в <body> тега <div>  и информации в нем.
     *
     * 2. Написать функцию которая получает как параметр HTML элемент и подсчитывает колличество
     * валидных ссылок и колличество неправильных ссылок ( тех у кого не указан аттрибут href) и вставляет эту инфорцмацию в переданный елемент в теге <div> красным текстов
     *
     * 3. Модифицировать функцию из пункта 2  чтобы она всем неправильным ссылкам добавляла аттрибут not-valid со значением true.
     *
     * 4. Написать функцию которая забирает значение input.
     * В это поле можно ввести имя тега. Функция должна срабатывать по клику на кнопку и должна удалять из документа все теги с таким именем.
     * Перед удалением функция должна собирать список всех возможных тегов документа и проверять введенное имя на валидность.
     * Статистику удаления должна вставлятся ввиде textNode в конец документа.
     *
     * 5. Написать функцию которая получает на входе елемент и выводит в консоль все елементы с таким же тегом на ее уровне.
     */
</script>
</body>
</html>
