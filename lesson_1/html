<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title></title>
</head>
<body>
<div id='test-id'>
    <div class="test-div">
        <span attr="attrvalue">
            <p>Paragraph</p>
            <a href="#">Link 1</a>
            <a href="#">Link 2</a>
			<a> моя ссылка</a>
        </span>
        <p>Paragraph 2</p>
        <a> Link6</a>
        <h2>H2 tag</h2>
    </div>

    <div id="diw-with-id" style="color:blue">
        <a href="#">Link4</a>
        <table>
        </table>

        <a href="/"></a>
        <span></span>
        <div accesskey="some-key" class="some-test-class"></div>

        <a> Link5</a>

        <div></div>

    </div>

    <a href="#">Link3</a>

    <article>
        Article tag
        <a href="#"></a>
    </article>

    <input id="DelTeg" type="text" placeholder="Введите тег для удаления...">


    <input type="button" value="I button" onclick="getInput();">

    <input type="button" value="I Button">

    <div id="myDiv" style="color:#BC8F8F">Описание</div>
</div>
<script type="text/javascript">
    //  	var idsElement = document.getElementById('diw-with-id');
    var idsElement = document.getElementsByClassName('test-div')[0];
    console.log(idsElement);
    var dictionaryTypes = {
        "1" : "ELEMENT_NODE",
        "2" : "ATTRIBUTE_NODE",
        "3" : 'TEXT_NODE',
        "4" : "COMMENT_NODE"
    };

    var newDiv = document.createElement('div');
    //debugger;
    function getAttributes ( element ) {
        //     console.log(element.attributes);
        //       console.log("Имя узла:" + element.nodeName);
        //    console.log("Имя тега:" + element.tagName);
        //    console.log("Тип узла: " + dictionaryTypes[element.nodeType]);
        //    console.log("Содержимое узла: " + element.data);
        //    console.log("Содержимое nodeValue: " + element.nodeValue);
        //    console.log("Содержимое innerHTML: " + element.innerHTML);
        newDiv.innerHTML += "Свойства элементов<br>";
        newDiv.innerHTML += "Имя узла:" + element.nodeName+"<br>";
        newDiv.innerHTML += "Тип узла: " + dictionaryTypes[element.nodeType]+";  ";
        newDiv.innerHTML += "Содержимое узла: " + element.data+";  ";
        newDiv.innerHTML += "Содержимое nodeValue: " + element.nodeValue+";  ";
        newDiv.innerHTML += "Содержимое innerHTML: " + element.innerHTML+"<br>";


        //console.log("Аттрибуты узла: " , idsElement.childNodes[i].attributes);

        if ( element.hasAttributes() ) {
            newDiv.innerHTML += "Атрибуты элементов<br>";
            for ( var i = 0; i < element.attributes.length; i++ ) {
                if ( typeof element.attributes[i] != 'function' ) {
                    newDiv.innerHTML +="Имя атрибута: " + element.attributes[i].nodeName + " Значение: "+ element.getAttribute( element.attributes[i].nodeName );
                    //console.log( 'Имя: ' + element.attributes[i].nodeName + " Значение: ", element.getAttribute( element.attributes[i].nodeName ) );
                }
            }
            newDiv.innerHTML +="<br>";
        }
        else {
            console.log('Узел не содержит аттрибутов.\n')
        }
        if (element.hasChildNodes()){
            for(var i=0; i<element.childNodes.length; i++){
                if (element.childNodes[i].nodeType!=3){getAttributes(element.childNodes[i]);}
            }

        }
        document.getElementById('myDiv').appendChild(newDiv);
    }

    getAttributes(idsElement);


    function validA( element ){
        var Val=0;
        var NotVal=0;
        var ValDiv = document.createElement('div');
        ValDiv.style.color = 'red';
        if (element.hasChildNodes()){
            //for(var i=0; i<element.childNodes.length; i++){
            //	console.log(element.childNodes[i].tagName);
            //	console.log(element.childNodes[i].tagName=='a');//почему не работает???
            var allA=element.getElementsByTagName('a')
            console.log(allA[2]);
            for ( var j = 0; j < allA.length; j++ ) {
                var ValOrNot=false;
                for (var i=0; i<allA[j].attributes.length;i++){
                    if (allA[j].attributes[i].nodeName=='href'){
                        Val++;
                        ValOrNot=true;

                    }
                }
                if (!ValOrNot){NotVal++;
                    var validAttribute = document.createAttribute( "not-valid" );
                    validAttribute.nodeValue = "true";
                    allA[j].attributes.setNamedItem(validAttribute);
                }
            }
            ValDiv.innerHTML+='Валидных ссылок: '+Val+"<br>";
            ValDiv.innerHTML+='Не валидных ссылок: '+NotVal+"<br>";
            element.appendChild(ValDiv);
            console.log('Валидных:'+Val);
            console.log('не валидных:'+NotVal)};

    }

    validA( idsElement );

    console.log(document.childNodes.length);
    var allTeg=[];
    var l1=document.childNodes[1];
    function GetAllTeg(element){
        for (var i=0; i<element.childNodes.length;i++){
            if (!(element.childNodes[i].tagName==undefined)){
                allTeg.push(element.childNodes[i].tagName);}
            if (element.childNodes[i].hasChildNodes()){
                GetAllTeg(element.childNodes[i]);
            }
        }
        //	console.log(document.childNodes[])
    }

    function getInput(){
        teg=document.getElementById('DelTeg').value;
        validTeg=false;
        //	allTeg=element.getElementsByTagName('teg');
        for(var i=0;i<allTeg.length;i++){
            if (teg==allTeg[i]){
                validTeg=true;
                i=allTeg.length;
            }
        }
        if (!validTeg){alert('тег не найден');}
        else{
            var parentElement = document.getElementById( 'test-id' );
            var childElement = parentElement.getElementsByTagName(teg);
            console.log(teg);
            console.log(parentElement);
            console.log(childElement[0]);
            console.log(childElement.length);

            /*for (var j=0;j<childElement.length;j++){
             parentElement.removeChild(childElement[j]);
             }*/
            parentElement.removeChild(childElement[1]);
        }

    }

    GetAllTeg(l1);
    console.log(allTeg);
    console.log(document.getElementById('test-id'));

    //Воросы: как втавить новый тег вконце боди?  почему не работает hasChildNodes() для текста???; 111


    /**
     * 1. Написать функцию которая получает как параметр HTML элеемент и выводит на екран все свойства и все атрибуты себя и всех дочерних елементов.
     * Вывод на экран осуществляется вставкой в <body> тега <div>  и информации в нем.
     *
     * 2. Написать функцию которая получает как параметр HTML элемент и подсчитывает колличество
     * валидных ссылок и колличество неправильных ссылок ( тех у кого не указан аттрибут href) и вставляет эту инфорцмацию в переданный елемент в теге <div> красным текстов
     *
     * 3. Модифицировать функцию из пункта 2  чтобы она всем неправильным ссылкам добавляла аттрибут not-valid со значением true.
     *
     * 4. Написать функцию которая забирает значение input.
     * В это поле можно ввести имя тега. Функция должна срабатывать по клику на кнопку и должна удалять из документа все теги с таким именем.
     * Перед удалением функция должна собирать список всех возможных тегов документа и проверять введенное имя на валидность.
     * Статистику удаления должна вставлятся ввиде textNode в конец документа.
     *
     * 5. Написать функцию которая получает на входе елемент и выводит в консоль все елементы с таким же тегом на ее уровне.
     */
</script>
</body>
</html>
